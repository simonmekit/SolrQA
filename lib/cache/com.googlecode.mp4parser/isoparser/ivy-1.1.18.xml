<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="com.googlecode.mp4parser"
		module="isoparser"
		revision="1.1.18"
		status="release"
		publication="20160216080958"
	>
		<license name="Apache Software License - Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0.txt" />
		<description homepage="http://code.google.com/p/mp4parser/">
		A generic parser and writer for all ISO 14496 based files (MP4, Quicktime, DCF, PDCF, ...)
		</description>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:maven.plugins>org.codehaus.mojo__aspectj-maven-plugin__1.5|null__maven-source-plugin__2.4|null__maven-resources-plugin__2.5|null__maven-compiler-plugin__2.3.2|null__maven-shade-plugin__2.4.1</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="isoparser" type="jar" ext="jar" conf="master"/>
		<artifact name="isoparser" type="source" ext="jar" conf="sources" m:classifier="sources"/>
		<artifact name="isoparser" type="javadoc" ext="jar" conf="javadoc" m:classifier="javadoc"/>
	</publications>
	<dependencies>
		<dependency org="com.google.android" name="android" rev="1.6_r2" force="true" conf="provided->compile(*),provided(*),runtime(*),master(*)">
			<exclude org="commons-logging" module="commons-logging" name="*" type="*" ext="*" conf="" matcher="exact"/>
			<exclude org="org.apache.httpcomponents" module="httpclient" name="*" type="*" ext="*" conf="" matcher="exact"/>
			<exclude org="org.khronos" module="opengl-api" name="*" type="*" ext="*" conf="" matcher="exact"/>
			<exclude org="xerces" module="xmlParserAPIs" name="*" type="*" ext="*" conf="" matcher="exact"/>
			<exclude org="xpp3" module="xpp3" name="*" type="*" ext="*" conf="" matcher="exact"/>
		</dependency>
		<dependency org="junit" name="junit" rev="4.10" force="true" conf="test->runtime(*),master(*)">
			<exclude org="org.hamcrest" module="hamcrest-core" name="*" type="*" ext="*" conf="" matcher="exact"/>
		</dependency>
		<dependency org="commons-io" name="commons-io" rev="2.4" force="true" conf="test->runtime(*),master(*)"/>
		<dependency org="commons-codec" name="commons-codec" rev="1.8" force="true" conf="test->runtime(*),master(*)"/>
	</dependencies>
</ivy-module>
